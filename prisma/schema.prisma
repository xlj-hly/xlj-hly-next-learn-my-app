// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// 定义数据库模型

generator client {
  provider = "prisma-client-js"
  // 定义 Prisma 客户端生成器，使用 prisma-client-js 作为提供者
}

// 定义数据源，使用 MongoDB 作为数据库提供者，数据库连接 URL 从环境变量 DATABASE_URL 获取
datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// 定义 User 模型，包含 id、userId 和 topics 字段，其中 id 是主键，userId 是唯一标识，topics 是与 Topic 模型的关系字段
model User {
  id     String  @id @default(auto()) @map("_id") @db.ObjectId
  userId String  @unique
  topics Topic[]
}

// 定义 Topic 模型，包含 id、user、userId、avatar、content、images 和 options 字段，其中 id 是主键，user 是与 User 模型的关系字段，options 是与 Option 模型的关系字段
model Topic {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  user    User     @relation(fields: [userId], references: [userId])
  userId  String
  avatar  String
  content String
  images  String[]
  options Option[]
}

// 定义 Option 模型，包含 id、topic、topicId、key 和 value 字段，其中 id 是主键，topic 是与 Topic 模型的关系字段
model Option {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  topic   Topic  @relation(fields: [topicId], references: [id])
  topicId String @db.ObjectId
  key     String
  value   Int
}

model Record {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  topicId String
  userId  String
  choice  String
}
